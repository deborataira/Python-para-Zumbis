def first_last6(nums):
  return nums[0] == 6 or nums[-1] == 6




def same_first_last(nums):
  return len(nums) > 0 and nums[0] == nums[-1]



def common_end(a, b):
  return a[0] == b[0] or a[-1] == b[-1]



def maior_ponta(nums):
  return [max(nums[0], nums[-1])] * len(nums)




def sum2(nums):
  return sum(nums[:2])



def middle_way(a, b):
  return [a[len(a)//2], b[len(b)//2]]




def date_fashion(eu, par):
  if eu <= 2 or par <= 2:
    return 0
  if eu >= 8 or par >= 8:
    return 2
  return 1



def squirrel_play(temp, is_summer):
  return 60 <= temp <= 100 if is_summer else 60 <= temp <= 90



def pego_correndo(speed, is_birthday):
  if is_birthday:
    speed = speed - 5
  if speed <= 60:
    return 0
  if 61 <= speed <= 80:
    return 1
  return 2



def alarm_clock(day, vacation):
  if vacation:
    return 'off' if day in (0, 6) else '10:00'
  else:
    return '10:00' if day in (0, 6) else '7:00'




def test(obtido, esperado):
  if obtido == esperado:
    prefixo = ' ParabÃ©ns!'
  else:
    prefixo = ' Ainda nÃ£o'
  print ('%s obtido: %s esperado: %s'
         % (prefixo, repr(obtido), repr(esperado)))
def main():
  print ('First_last6')
  test(first_last6([1, 2, 6]), True)
  test(first_last6([6, 1, 2, 3]), True)
  test(first_last6([3, 2, 1]), False)
  test(first_last6([3, 6, 1]), False)
  test(first_last6([3, 6]), True)
  test(first_last6([6]), True)
  test(first_last6([3]), False)

  print ()
  print ('Same_first_last')
  test(same_first_last([1, 2, 3]), False)
  test(same_first_last([1, 2, 3, 1]), True)
  test(same_first_last([1, 2, 1]), True)
  test(same_first_last([7]), True)
  test(same_first_last([]), False)
  test(same_first_last([7, 7]), True)

  print ()
  print ('Common_end')
  test(common_end([1, 2, 3], [7, 3]), True)
  test(common_end([1, 2, 3], [7, 3, 2]), False)
  test(common_end([1, 2, 3], [1, 3]), True)
  test(common_end([1, 2, 3], [1]), True)
  test(common_end([1, 2, 3], [2]), False)

  print ()
  print ('Maior_ponta')
  test(maior_ponta([1, 2, 3]), [3, 3, 3])
  test(maior_ponta([11, 5, 9]), [11, 11, 11])
  test(maior_ponta([2, 11, 3]), [3, 3, 3])
  test(maior_ponta([11, 3, 3]), [11, 11, 11])
  test(maior_ponta([3, 11, 11]), [11, 11, 11])
  test(maior_ponta([2, 2, 2]), [2, 2, 2])
  test(maior_ponta([2, 11, 2]), [2, 2, 2])
  test(maior_ponta([0, 0, 1]), [1, 1, 1])
  
  print ()
  print ('sum2')
  test(sum2([1, 2, 3]), 3)
  test(sum2([1, 1]), 2)
  test(sum2([1, 1, 1, 1]), 2)
  test(sum2([1, 2]), 3)
  test(sum2([1]), 1)
  test(sum2([]), 0)
  test(sum2([4, 5, 6]), 9)
  test(sum2([4]), 4)

  print ()
  print ('middle_way')
  test(middle_way([1, 2, 3], [4, 5, 6]), [2, 5])
  test(middle_way([7, 7, 7], [3, 8, 0]), [7, 8])
  test(middle_way([5, 2, 9], [1, 4, 5]), [2, 4])
  test(middle_way([1, 9, 7], [4, 8, 8]), [9, 8])
  test(middle_way([1, 2, 3], [3, 1, 4]), [2, 1])
  test(middle_way([1, 2, 3], [4, 1, 1]), [2, 1])
       
  print ()
  print ('date fashion')
  test(date_fashion(5, 10), 2)
  test(date_fashion(5, 2), 0)
  test(date_fashion(5, 5), 1)
  test(date_fashion(3, 3), 1)
  test(date_fashion(10, 2), 0)
  test(date_fashion(2, 9), 0)
  test(date_fashion(9, 9), 2)
  test(date_fashion(10, 5), 2)
  test(date_fashion(2, 2), 0)
  test(date_fashion(3, 7), 1)
  test(date_fashion(2, 7), 0)
  test(date_fashion(6, 2), 0)

  print ()
  print ('squirrel_play')
  test(squirrel_play(70, False), True)
  test(squirrel_play(95, False), False)
  test(squirrel_play(95, True), True)
  test(squirrel_play(90, False), True)
  test(squirrel_play(90, True), True)
  test(squirrel_play(50, False), False)
  test(squirrel_play(50, True), False)
  test(squirrel_play(100, False), False)
  test(squirrel_play(100, True), True)
  test(squirrel_play(105, True), False)
  test(squirrel_play(59, False), False)	
  test(squirrel_play(59, True), False)	
  test(squirrel_play(60, False), True)

  print ()
  print ('Pego correndo')
  test(pego_correndo(60, False), 0)
  test(pego_correndo(65, False), 1)
  test(pego_correndo(65, True), 0)
  test(pego_correndo(80, False), 1)
  test(pego_correndo(85, False), 2)
  test(pego_correndo(85, True), 1)
  test(pego_correndo(70, False), 1)
  test(pego_correndo(75, False), 1)
  test(pego_correndo(75, True), 1)
  test(pego_correndo(40, False), 0)
  test(pego_correndo(40, True), 0)
  test(pego_correndo(90, False), 2)

  print ()
  print ('Alarm Clock')
  test(alarm_clock(1, False), '7:00')
  test(alarm_clock(5, False), '7:00')
  test(alarm_clock(0, False), '10:00')
  test(alarm_clock(6, False), '10:00')
  test(alarm_clock(0, True), 'off')
  test(alarm_clock(6, True), 'off')
  test(alarm_clock(1, True), '10:00')
  test(alarm_clock(3, True), '10:00')
  test(alarm_clock(5, True), '10:00')

if __name__ == '__main__':
  main()